{"ast":null,"code":"var _jsxFileName = \"/Users/unix/Documents/Projects/fullstack/notice/client/src/Components/Note.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"../style/note.css\";\nimport noteService from \"../API/noteService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Note = _ref => {\n  _s();\n\n  let {\n    note,\n    onDel\n  } = _ref;\n\n  const handleDelete = e => {\n    e.preventDefault();\n    noteService.delete(note).then(data => {\n      onDel();\n    });\n  };\n\n  const [isEdit, setIsEdit] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  const editNote = e => {\n    e.preventDefault();\n    const note = {\n      title,\n      content,\n      date: Date()\n    };\n    noteService.update(note).then(data => {\n      setIsEdit(false);\n      onDel();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    id: note._id,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-header-title\",\n        children: isEdit ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          placeholder: \"new title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-content\",\n        children: isEdit ? /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: content,\n          onChange: e => setContent(e.target.value),\n          placeholder: \"new content\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [!isEdit ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: handleDelete,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: () => editNote(note),\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: () => setIsEdit(true),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Note, \"qX3DyQ9AE+IQu5DCb4FrflyZVE4=\");\n\n_c = Note;\n\nvar _c;\n\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"sources":["/Users/unix/Documents/Projects/fullstack/notice/client/src/Components/Note.jsx"],"names":["React","useState","noteService","Note","note","onDel","handleDelete","e","preventDefault","delete","then","data","isEdit","setIsEdit","title","setTitle","content","setContent","editNote","date","Date","update","_id","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport \"../style/note.css\";\nimport noteService from \"../API/noteService\";\n\nexport const Note = ({ note, onDel }) => {\n  const handleDelete = (e) => {\n    e.preventDefault();\n    noteService.delete(note).then((data) => {\n      onDel();\n    });\n  };\n  const [isEdit, setIsEdit] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  const editNote = (e) => {\n    e.preventDefault();\n    const note = {\n      title,\n      content,\n      date: Date(),\n    };\n    noteService.update(note).then((data) => {\n      setIsEdit(false);\n      onDel();\n    });\n  };\n\n  return (\n    <div className=\"note\" id={note._id}>\n      <div className=\"note-header\">\n        <div className=\"note-header-title\">\n          {isEdit ? (\n            <input\n              type=\"text\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n              placeholder=\"new title\"\n            ></input>\n          ) : (\n            <p>{note.title}</p>\n          )}\n        </div>\n        <div className=\"note-content\">\n          {isEdit ? (\n            <input\n              type=\"text\"\n              value={content}\n              onChange={(e) => setContent(e.target.value)}\n              placeholder=\"new content\"\n            ></input>\n          ) : (\n            <p>{note.content}</p>\n          )}\n        </div>\n        <div className=\"buttons\">\n          {!isEdit ? (\n            <button type=\"submit\" onClick={handleDelete}>\n              Delete\n            </button>\n          ) : (\n            <button type=\"submit\" onClick={() => editNote(note)}>\n              Save\n            </button>\n          )}\n          <button type=\"submit\" onClick={() => setIsEdit(true)}>\n            Edit\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}